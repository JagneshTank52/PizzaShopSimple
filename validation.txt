using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc.Rendering;

namespace PizzaShop.Entity.ViewModels.UserVM
{
    public class UserVM
    {
        public int Id { get; set; }

        [Required(ErrorMessage = "First Name is required.")]
        [StringLength(255, ErrorMessage = "First Name cannot exceed 255 characters.")]
        public string? FirstName { get; set; }

        [StringLength(255, ErrorMessage = "Last Name cannot exceed 255 characters.")]
        public string? LastName { get; set; }

        [Required(ErrorMessage = "User Name is required.")]
        [StringLength(255, ErrorMessage = "User Name cannot exceed 255 characters.")]
        public string? UserName { get; set; }

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Please enter a valid email address.")]
        [StringLength(255, ErrorMessage = "Email cannot exceed 255 characters.")]
        public string? Email { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        [StringLength(12, MinimumLength = 6, ErrorMessage = "Password should be between 6 and 12 characters.")]
        public string? Password { get; set; }

        public string? ProfileImage { get; set; }

        public IFormFile? ProfileImageFile { get; set; }

        [Required(ErrorMessage = "Phone Number is required.")]
        [StringLength(20, ErrorMessage = "Phone Number cannot exceed 20 characters.")]
        [RegularExpression(@"^\d{10,20}$", ErrorMessage = "Please enter a valid phone number.")]
        public string? PhoneNumber { get; set; }

        [Required(ErrorMessage = "Please select a country.")]
        public int CountryId { get; set; }

        [Required(ErrorMessage = "Please select a state.")]
        public int StateId { get; set; }

        [Required(ErrorMessage = "Please select a city.")]
        public int CityId { get; set; }

        [Required(ErrorMessage = "Address is required.")]
        public string? Address { get; set; }

        public bool? IsFirstTime { get; set; } = true;

        [Required(ErrorMessage = "Zip Code is required.")]
        [StringLength(20, ErrorMessage = "Zip Code cannot exceed 20 characters.")]
        public string ZipCode { get; set; } = null!;

        [Required(ErrorMessage = "User Role is required.")]
        public int UserRoleId { get; set; }

        public string? UserRoleName { get; set; }

        public bool IsDeleated { get; set; } = false;

        public DateTime? CreatedAt { get; set; } = DateTime.UtcNow;

        public int? CreatedBy { get; set; }

        public DateTime? ModifiedAt { get; set; } = DateTime.UtcNow;

        public int? ModifiedBy { get; set; }

        public bool? IsActive { get; set; } = true;

        public List<SelectListItem> CountryList { get; set; } = new List<SelectListItem>();
        public List<SelectListItem> StateList { get; set; } = new List<SelectListItem>();
        public List<SelectListItem> CityList { get; set; } = new List<SelectListItem>();
        public List<SelectListItem> RoleList { get; set; } = new List<SelectListItem>();
    }
}
