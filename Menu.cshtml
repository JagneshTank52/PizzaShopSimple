@{
    ViewData["Title"] = "Home Page";
    Layout = "_OrderAppLayout";

    var orderId = Context.Request.Query["id"];
}

<section class="d-flex h-100">
    <aside class="menu-sidebar offcanvas-lg" id="sidebar-category-list" tabindex="-2" id="offcanvasResponsive"
        aria-labelledby="offcanvasResponsiveLabel">

    </aside>


    <section class="d-flex flex-column flex-grow-1 p-3">
        <div class="top-navbar d-flex justify-content-between align-items-center mb-3">
            <div class="navbar-left d-flex flex-grow-1">
                <button class="menu-sidebar-btn bg-transparent border-0 p-0 me-3 d-lg-none d-block" title="menu bar"
                    type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasResponsive"
                    aria-controls="offcanvasResponsive">
                    <img src="../images/menu-bar-black.svg" width="30" height="30" alt="" />
                </button>

                <div class="position-relative d-flex flex-grow-1">
                    <input type="text" class="form-control" id="category-search-input" placeholder="Search"
                        style="height: 50px; width: 80%;">
                    <Button type="submit" class="category-search-btn" id="searchID"
                        style="background-color: transparent; border: none;">
                        <i class="bi bi-search fs-5"></i>
                    </Button>
                </div>
            </div>
            <div>
                <div class="d-flex align-items-center ms-3">
                    <i class="bi bi-circle-fill text-success ms-4 me-2" style="font-size: 0.7rem;"></i> Vegitarian
                    <i class="bi bi-circle-fill text-primary ms-4 me-2" style="font-size:0.7rem;"></i> Non-Vegitarian
                    <i class="bi bi-circle-fill text-info ms-4 me-2" style="font-size: 0.7rem;"></i> Vegan
                </div>
            </div>
        </div>

        <div id="menu-item" class="d-flex flex-row flex-wrap justify-content-md-start justify-content-center gap-3">
            @* PARTIAL VIEW - MENU ITEM AS PER CATEGGORY *@
        </div>

    </section>

    @if (!string.IsNullOrEmpty(orderId))
    {
        <section class="d-flex flex-column flex-grow-1 p-3" id="order-menu" style="min-width: 35%;">
            @* PARTIAL VIEW - ORDER MENU *@
        </section>
    }

</section>

<!-- Modal -->
<div class="modal fade" id="add-modifier-modal" tabindex="-1" aria-labelledby="itemModelLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" id="add-modifier-modal-form">

    </div>
</div>

@section Scripts {
    <script>

        var categoryId = 0;
        var selectedItemAndModifier = [];
        var itemId = 0;

        var urlParams = new URLSearchParams(window.location.search);
        var orderId = urlParams.get('id');

        var addModifierModal = new bootstrap.Modal("#add-modifier-modal");

        $(document).ready(function () {


            getCategory();

            if (orderId) {
                console.log(orderId)
                getOrderCard(orderId);
            }

            @* CATEGORY WISE ITEM *@
                $("#sidebar-category-list").on("click", ".sidebar-category-item li", function (e) {
                    e.preventDefault();
                    $(".sidebar-category-item li").removeClass("category-selected");
                    $(this).addClass("category-selected");
                    categoryId = $(this).data("id");
                    getItemList(categoryId);
                });
        });

        function addItemToOrder() {
            $.ajax({
                url: "/OrderAppMenu/AddItemToOrder",
                contentType: "application/json",
                data: JSON.stringify({
                    orderId: orderId,
                    itemId: itemId,
                    modifierList: selectedItemAndModifier
                }),
                type: "POST",
                success: function (data) {
                    addModifierModal.hide();
                    getOrderItemList(orderId);
                },
                error: function () {
                    alert("No Projects Found");
                    $("#add-modifier-modal-form").html('An error has occurred');
                }
            });
        }

        function getCategory() {
            $.ajax({
                url: "/OrderAppMenu/GetCategorySidebar",
                type: "GET",
                dataType: "html",
                success: function (response) {
                    $("#sidebar-category-list").html(response);
                    $(".sidebar-category-item li:eq(2)").addClass("category-selected");
                    @* $(".category-item a p").first().addClass("high-light"); *@
                        @* itemPageState.GruoupId = $(".category").first().data("id");
                    console.log("categoryId" + itemPageState.GruoupId);
                    getItemList(); *@
                        getItemList(0);
                },
                error: function (error) {
                    console.log(error);
                    alert("No Projects Found");
                    $("#category-list").html('An error has occurred');
                }
            });
        };

        //GET ORDER MENU
        function getOrderCard(orderId) {
            console.log(orderId)
            $.ajax({
                url: "/OrderAppMenu/GetOrderCard",
                type: "GET",
                dataType: "html",
                data: { orderId: orderId },
                success: function (response) {
                    $("#order-menu").html(response);
                },
                error: function (error) {
                    console.log(error);
                    alert("No Projects Found");
                    $("#category-list").html('An error has occurred');
                }
            });
        };

        @* GET ITEM LIST *@
            function getItemList() {
                $.ajax({
                    url: "/OrderAppMenu/GetItemList",
                    data: { categoryId: categoryId },
                    type: "GET",
                    dataType: "html",
                    success: function (data) {
                        $("#menu-item").html(data);
                    },
                    error: function () {
                        alert("No Projects Found");
                        $("#menu-item").html('An error has occurred');
                    }
                });
            };

        function getItemWiseModifier(itemId) {
            $.ajax({
                url: "/OrderAppMenu/GetItemWiseModifier",
                data: { itemId: itemId },
                type: "GET",
                dataType: "html",
                success: function (data) {
                    $("#add-modifier-modal-form").html(data);
                },
                error: function () {
                    alert("No Projects Found");
                    $("#add-modifier-modal-form").html('An error has occurred');
                }
            });
        };

    function toggleFavorite(event,element) {
        event.stopPropagation(); 
    var itemId = $(element).data('item-id');
    console.log(itemId)
    $.ajax({
        url: '/OrderAppMenu/ToggleFavorite', // Adjust the URL to your controller action
        type: 'POST',
        data: { itemId: itemId },
        contentType: 'application/json',
        success: function(response) {
            if (response.success) {
                // Toggle the heart icon class based on the favorite status
                $(element).toggleClass('filled-heart');
                toastr.success(response.message);
            } else {
                toastr.error(response.message);
            }
        },
        error: function() {
            toastr.error('An error occurred while updating the favorite status.');
        }
    });
}
    </script>
}